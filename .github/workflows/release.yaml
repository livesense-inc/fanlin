---
# @see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# @see https://github.com/actions/virtual-environments
name: Release
on:
  push:
    tags:
      - "v*"
defaults:
  run:
    shell: bash
concurrency: ${{ github.workflow }}
jobs:
  executable-files:
    name: Executable Files
    if: github.repository == 'livesense-inc/fanlin'
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Print libc version
        run: ldd --version

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libaom-dev

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  container:
    name: Container
    if: github.repository == 'livesense-inc/fanlin'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    concurrency: ${{ github.workflow }}
    permissions:
      packages: write
    env:
      IMAGE_NAME: fanlin
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: docker build . -t $IMAGE_NAME

      - name: Version
        id: version
        run: |
          version=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && version=$(echo $version | sed -e 's/^v//')
          [ "$version" == "main" ] && version=latest
          echo "value=$version" >> "$GITHUB_OUTPUT"

      - name: Login
        run: >
          echo "${{ secrets.GITHUB_TOKEN }}"
          | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Tag
        id: tag
        run: |
          tag=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:${{ steps.version.outputs.value }}
          docker tag $IMAGE_NAME $tag
          echo "value=$tag" >> "$GITHUB_OUTPUT"

      - name: Push
        run: docker push ${{ steps.tag.outputs.value }}
